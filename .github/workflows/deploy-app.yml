on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
name: Deploy Application

env:
  DEPLOYMENT_NAME: wif-blog-aaes-${{inputs.environment}}-${{ github.run_number }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: checkout
        uses: actions/checkout@main

      - name: install-npm-ui-packages
        run: npm install
        working-directory: ./src/ui

      - name: build-ui
        run: npm run build
        working-directory: ./src/ui

      - name: setup-dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: build-api
        run: dotnet build --configuration Release
        working-directory: ./src/api

      - name: azure-login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/arm-deploy@v1
        name: azure-environment-setup
        with:
          scope: subscription
          deploymentName: ${{ env.DEPLOYMENT_NAME }}
          region: eastus2
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          template: ./infrastructure/setup-subscription.bicep
          parameters: ./infrastructure/setup-subscription.parameters.${{ inputs.environment }}.json
          failOnStdErr: false

      - name: bicep-outputs
        uses: azure/cli@v1
        with:
          inlineScript: |
            staticWebsiteName=$(az deployment sub show -n ${{ env.DEPLOYMENT_NAME }} --query "properties.outputs.staticWebsiteName.value")
            echo "staticWebsiteName=$staticWebsiteName" >> "$GITHUB_OUTPUT"

      - run: |
          echo "static website name"
          echo ${{ steps.azure-environment-setup.outputs.staticWebsiteName }}

      - name: get-api-key
        uses: azure/cli@v1
        with:
          inlineScript: |
            key=$(az staticwebapp secrets list --name ${{ steps.bicep-outputs.outputs.staticWebsiteName }} --query "properties.apiKey")
            echo "::add-mask::$key"
            echo "key=$key" >> "$GITHUB_OUTPUT"

      - uses: Azure/static-web-apps-deploy@v1
        name: deploy-static-site
        with:
          skip_app_build: true
          azure_static_web_apps_api_token: ${{ steps.get-api-key.outputs.key }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "./src/ui/build/"
